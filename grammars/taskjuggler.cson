'scopeName': 'source.taskjuggler'
'name': 'Taskjuggler'
'fileTypes': [
  'tjp',
  'TJP',
  'tji',
  'TJI'
]
'foldingStartMarker': '^\\s*([-%#\\:\\.\\w\\=].*)\\s{'
'foldingStopMarker': '^\\s*}'

'patterns': [

# Project keywords
  {
    'match': '\\b(account|aggregate|copyright|alertlevels|author|balance|chargeset|currency|currencyformat|dailymax|dailymin|dailyworkinghours|flags|loadunit|numberformat|project|rate|scenario|shift|timeformat|timezone|timingresolution|vacation|workinghours)\\b'
    'name': 'keyword.project.taskjuggler'
  }
# task keywords
  {
    'match': '\\b(task)\\b'
    'name' : 'taskmain.taskjuggler'
  }


  {
    'match': '\\b(priority|start|end|note|length|duration|gapduration|gaplength|shift|shifts|workinghours|effort|complete|depends|allocate|milestone|charge|chargeset|limits|precedes|shifts)\\b'
    'name': 'taskdetail.taskjuggler'
  }

# journal keywords

  {
    'match': '\\b(journalentry|author|alert|summary|details|flags)\\b'
    'name': 'keyword.journal.taskjuggler'
  }

# macro keywords

  {
    'match': '\\b(macro)\\b'
    'name': 'keyword.mac.taskjuggler'
  }


# report keywords
  {
    'match': '\\b(textreport|taskreport|resourcereport|hidereport|navigator|footer|header|formats|center|columns|hideresource|journalattributes|sorttasks|hidetasks|cellcolor|scenarios|headline|journalmode|period)\\b'
    'name': 'keyword.report.taskjuggler'
  }

# -8<- UTF-8 note ->8-
  {
    'begin': '-8<-'
    'captures':
      '0':
        'name': 'note.taskjuggler'
    'end': '->8-'
    'name': 'note.taskjuggler'
  }

# Notes
  {
  'begin': '(note)\\s*"'
  'captures':
    '0': 'name': 'note.taskjuggler'
    '1': 'name': 'note.taskjuggler'
  'end': '"'
  'name': 'note.block.taskjuggler'
  }
# Numbers
  {
    'match': '\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))\\b'
    'name': 'constant.numeric.taskjuggler'
  }

# Comments
  {
    'begin': '/\\*'
    'captures':
      '0':
        'name': 'comment'
    'end': '\\*/'
    'name': 'comment.block'
  }
  {
    'begin': '#'
    'Captures':
      '0':
        'name': 'comment'
    'end': '\\n'
    'name': 'comment'
  }

# double-quote strings

  {
    'match': '\"[^\"]*\"'
    'name' : 'string.quoted.double.taskjuggler'
  }

]
